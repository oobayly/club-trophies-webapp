.d-contents {
  display: contents;
}

.button-grid {
  display: flex;
  justify-content: space-around;

  >button {
    flex: 1 1 0;

    &:not(:first-child) {
      @extend .ms-4;
    }
  }
}

@media print {
  .p-print-0 {
    padding: 0 !important;
  }
}


@mixin btn-group-responsive-all {
  position: relative;
  display: inline-flex;
  vertical-align: middle; // match .btn alignment given font-size hack above

  @include border-radius($btn-border-radius);

  >.btn {
    position: relative;
    flex: 1 1 auto;
  }

  // Bring the hover, focused, and "active" buttons to the front to overlay
  // the borders properly
  >.btn-check:checked+.btn,
  >.btn-check:focus+.btn,
  >.btn:hover,
  >.btn:focus,
  >.btn:active,
  >.btn.active {
    z-index: 1;
  }
}

@mixin btn-group-responsive-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  >.btn,
  >.btn-group-responsive {
    width: 100%;
  }

  >.btn:not(:first-child),
  >.btn-group-responsive:not(:first-child) {
    margin-top: -$btn-border-width;
  }

  // Reset rounded corners
  >.btn:not(:last-child):not(.dropdown-toggle),
  >.btn-group-responsive:not(:last-child)>.btn {
    @include border-bottom-radius(0);
  }

  >.btn~.btn,
  >.btn-group-responsive:not(:first-child)>.btn {
    @include border-top-radius(0);
  }
}

@mixin btn-group-responsive-horizontal {
  flex-direction: row;

  // Prevent double borders when buttons are next to each other
  > :not(.btn-check:first-child)+.btn,
  >.btn-group-responsive:not(:first-child) {
    margin-top: 0;
    margin-left: -$btn-border-width;
  }

  // Reset rounded corners
  >.btn:not(:last-child):not(.dropdown-toggle),
  >.btn.dropdown-toggle-split:first-child,
  >.btn-group-responsive:not(:last-child)>.btn {
    @include border-end-radius(0);
  }

  // The left radius should be 0 if the button is:
  // - the "third or more" child
  // - the second child and the previous element isn't `.btn-check` (making it the first child visually)
  // - part of a btn-group-responsive which isn't the first child
  >.btn:nth-child(n + 3),
  > :not(.btn-check)+.btn,
  >.btn-group-responsive:not(:first-child)>.btn {
    @include border-start-radius(0);
  }
}


%btn-group-responsive {
  @include btn-group-responsive-all;
  @include btn-group-responsive-horizontal;
}

%btn-group-responsive-vertical {
  @include btn-group-responsive-all;
  @include btn-group-responsive-vertical;
}

.btn-group-responsive {
  @extend %btn-group-responsive-vertical;
}

@media (max-width: 575.98px) {
  .btn-group-responsive-sm {
    @include btn-group-responsive-all;
    @include btn-group-responsive-vertical
  }
}

@media (min-width: 576px) {
  .btn-group-responsive-sm {
    @include btn-group-responsive-all;
    @include btn-group-responsive-horizontal;
  }
}

@media (max-width: 767.98px) {
  .btn-group-responsive-md {
    @include btn-group-responsive-all;
    @include btn-group-responsive-vertical;
  }
}

@media (min-width: 768px) {
  .btn-group-responsive-md {
    @include btn-group-responsive-all;
    @include btn-group-responsive-horizontal;
  }
}

@media (max-width: 991.98px) {
  .btn-group-responsive-lg {
    @include btn-group-responsive-all;
    @include btn-group-responsive-vertical;
  }
}

@media (min-width: 992px) {
  .btn-group-responsive-lg {
    @include btn-group-responsive-all;
    @include btn-group-responsive-horizontal;
  }
}

@media (max-width: 1209.98px) {
  .btn-group-responsive-xl {
    @include btn-group-responsive-all;
    @include btn-group-responsive-vertical;
  }
}

@media (min-width: 1200px) {
  .btn-group-responsive-xl {
    @include btn-group-responsive-all;
    @include btn-group-responsive-horizontal;
  }
}

@media (max-width: 1409.98px) {
  .btn-group-responsive-xxl {
    @include btn-group-responsive-all;
    @include btn-group-responsive-vertical;
  }
}

@media (min-width: 1400px) {
  .btn-group-responsive-xxl {
    @include btn-group-responsive-all;
    @include btn-group-responsive-horizontal;
  }
}
